name: Release Binary

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    name: Build and Upload Release Binaries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: renamer-linux
            binary_path: target/release/renamer
            archive_ext: tar.gz
          - os: macos-latest
            artifact_name: renamer-macos
            binary_path: target/release/renamer
            archive_ext: tar.gz
          - os: windows-latest
            artifact_name: renamer-windows
            binary_path: target/release/renamer.exe
            archive_ext: zip

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build release binary
        run: cargo build --release

      - name: Make binary executable (Linux/macOS only)
        if: matrix.os != 'windows-latest'
        run: chmod +x ${{ matrix.binary_path }}

      - name: Strip binary (Linux/macOS only)
        if: matrix.os != 'windows-latest'
        run: strip ${{ matrix.binary_path }}

      - name: Package artifact (Linux/macOS)
        if: matrix.os != 'windows-latest'
        run: |
          mkdir dist
          tar -czvf dist/${{ matrix.artifact_name }}.tar.gz -C $(dirname ${{ matrix.binary_path }}) $(basename ${{ matrix.binary_path }})

      - name: Package artifact (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          mkdir dist
          Compress-Archive -Path "${{ matrix.binary_path }}" -DestinationPath "dist/${{ matrix.artifact_name }}.zip"

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
